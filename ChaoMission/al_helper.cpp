#include "al_helper.h"

wchar_t ChaoNameDecoder[256]
{
	u'\n',
	u'!',
	u'\"',
	u'#',
	u'$',
	u'%',
	u'&',
	u'\'',
	u'(',
	u')',
	u'*',
	u'+',
	u',',
	u'-',
	u'.',
	u'/',
	u'0',
	u'1',
	u'2',
	u'3',
	u'4',
	u'5',
	u'6',
	u'7',
	u'8',
	u'9',
	u':',
	u';',
	u'<',
	u'=',
	u'>',
	u'?',
	u'@',
	u'A',
	u'B',
	u'C',
	u'D',
	u'E',
	u'F',
	u'G',
	u'H',
	u'I',
	u'J',
	u'K',
	u'L',
	u'M',
	u'N',
	u'O',
	u'P',
	u'Q',
	u'R',
	u'S',
	u'T',
	u'U',
	u'V',
	u'W',
	u'X',
	u'Y',
	u'Z',
	u'[',
	u'¥',
	u']',
	u'^',
	u'_',
	u'‘',
	u'a',
	u'b',
	u'c',
	u'd',
	u'e',
	u'f',
	u'g',
	u'h',
	u'i',
	u'j',
	u'k',
	u'l',
	u'm',
	u'n',
	u'o',
	u'p',
	u'q',
	u'r',
	u's',
	u't',
	u'u',
	u'v',
	u'w',
	u'x',
	u'y',
	u'z',
	u'{',
	u'|',
	u'}',
	u'~',
	u' ',
	u'À',
	u'Á',
	u'Â',
	u'Ã',
	u'Ä',
	u'Å',
	u'Æ',
	u'Ç',
	u'È',
	u'É',
	u'Ê',
	u'Ë',
	u'Ì',
	u'Í',
	u'Î',
	u'Ï',
	u'Ð',
	u'Ñ',
	u'Ò',
	u'Ó',
	u'Ô',
	u'Õ',
	u'Ö',
	u'¿',
	u'Ø',
	u'Ù',
	u'Ú',
	u'Û',
	u'Ü',
	u'Ý',
	u'Þ',
	u'ß',
	u'à',
	u'á',
	u'â',
	u'ã',
	u'ä',
	u'å',
	u'æ',
	u'ç',
	u'è',
	u'é',
	u'ê',
	u'ë',
	u'ì',
	u'í',
	u'î',
	u'ï',
	u'ð',
	u'ñ',
	u'ò',
	u'ó',
	u'ô',
	u'õ',
	u'ö',
	u'¡',
	u'ø',
	u'ù',
	u'ú',
	u'û',
	u'ü',
	u'ý',
	u'þ',
	u'ÿ',
	u'ァ',
	u'ア',
	u'ィ',
	u'イ',
	u'ゥ',
	u'ウ',
	u'ェ',
	u'エ',
	u'ォ',
	u'オ',
	u'カ',
	u'ガ',
	u'キ',
	u'ギ',
	u'ク',
	u'グ',
	u'ケ',
	u'ゲ',
	u'コ',
	u'ゴ',
	u'サ',
	u'ザ',
	u'シ',
	u'ジ',
	u'ス',
	u'ズ',
	u'セ',
	u'ゼ',
	u'ソ',
	u'ゾ',
	u'タ',
	u'ダ',
	u'チ',
	u'ヂ',
	u'ツ',
	u'ッ',
	u'ヅ',
	u'テ',
	u'デ',
	u'ト',
	u'ド',
	u'ナ',
	u'ニ',
	u'ヌ',
	u'ネ',
	u'ノ',
	u'ハ',
	u'バ',
	u'パ',
	u'ヒ',
	u'ビ',
	u'ピ',
	u'フ',
	u'ブ',
	u'プ',
	u'ヘ',
	u'ベ',
	u'ベ',
	u'ホ',
	u'ボ',
	u'ポ',
	u'マ',
	u'ミ',
	u'ム',
	u'メ',
	u'モ',
	u'ャ',
	u'ヤ',
	u'ュ',
	u'ユ',
	u'ョ',
	u'ヨ',
	u'ラ',
	u'リ',
	u'ル',
	u'レ',
	u'ロ',
	u'ヮ',
	u'ワ',
	u'ﾞ',
	u'ﾟ',
	u'ヲ',
	u'ン',
	u'。',
	u'、',
	u'〒',
	u'・',
	u'★',
	u'♀',
	u'♂',
	u'♪',
	u'…',
	u'「',
	u'」',
	u'ヴ',
	u' '
};

bool DecodeChaoName(wchar_t Name[], wchar_t ChaoNameDecoded[7])
{
	int i = 0;
	wchar_t result[7];
	while (Name[i] != 0 && i < 7)
	{
		if (Name[i] < 256) result[i] = ChaoNameDecoder[Name[i]];
		else result[i] = '_';
		i++;
	}
	*ChaoNameDecoded = *result;
	return true;
}

void RingDisplay_AddRings(signed int a1)
{
	__asm
	{
		mov eax, [a1]
		call sub_5A6B30
	}
}